- name: barnyard2
  type: group
  description: >
    Contains fields for the Bro barnyard2 logs.
  fields:
    - name: ts
      type: time
      description: >
        
    - name: pid
      type: Barnyard2::PacketID
      description: >
        
    - name: alert
      type: Barnyard2::AlertData
      description: >
        - name: capture_loss
  type: group
  description: >
    Contains fields for the Bro capture_loss logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the measurement occurred.
    - name: ts_delta
      type: interval
      description: >
        The time delay between this measurement and the last.
    - name: peer
      type: string
      description: >
        In the event that there are multiple Bro instances logging to the same host, this distinguishes each peer with its individual name.
    - name: gaps
      type: count
      description: >
        Number of missed ACKs from the previous measurement interval.
    - name: acks
      type: count
      description: >
        Total number of ACKs seen in the previous measurement interval.
    - name: percent_lost
      type: double
      description: >
        Percentage of ACKs seen where the data being ACKed wasnt seen.- name: cluster
  type: group
  description: >
    Contains fields for the Bro cluster logs.
  fields:
    - name: ts
      type: time
      description: >
        The time at which a cluster message was generated.
    - name: message
      type: string
      description: >
        A message indicating information about the clusters operation.- name: communication
  type: group
  description: >
    Contains fields for the Bro communication logs.
  fields:
    - name: ts
      type: time
      description: >
        The network time at which a communication event occurred.
    - name: peer
      type: string
      description: >
        The peer name (if any) with which a communication event is concerned.
    - name: src_name
      type: string
      description: >
        Where the communication event message originated from, that is, either from the scripting layer or inside the Bro process.
    - name: connected_peer_desc
      type: string
      description: >
        Todo
    - name: connected_peer_addr
      type: addr
      description: >
        Todo
    - name: connected_peer_port
      type: port
      description: >
        Todo
    - name: level
      type: string
      description: >
        The severity of the communication event message.
    - name: message
      type: string
      description: >
        A message describing the communication event between Bro or Broccoli instances.- name: conn
  type: group
  description: >
    Contains fields for the Bro conn logs.
  fields:
    - name: ts
      type: time
      description: >
        This is the time of the first packet.
    - name: uid
      type: string
      description: >
        A unique identifier of the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: proto
      type: transport_proto
      description: >
        The transport layer protocol of the connection.
    - name: service
      type: string
      description: >
        An identification of an application protocol being sent over the connection.
    - name: duration
      type: interval
      description: >
        How long the connection lasted.  For 3-way or 4-way connection tear-downs, this will not include the final ACK.
    - name: orig_bytes
      type: count
      description: >
        The number of payload bytes the originator sent. For TCP this is taken from sequence numbers and might be inaccurate (e.g., due to large connections).
    - name: resp_bytes
      type: count
      description: >
        The number of payload bytes the responder sent. See orig_bytes.
    - name: conn_state
      type: string
      description: >
        
    - name: local_orig
      type: bool
      description: >
        If the connection is originated locally, this value will be T. If it was originated remotely it will be F.  In the case that the Site::local_nets variable is undefined, this field will be left empty at all times.
    - name: local_resp
      type: bool
      description: >
        If the connection is responded to locally, this value will be T. If it was responded to remotely it will be F.  In the case that the Site::local_nets variable is undefined, this field will be left empty at all times.
    - name: missed_bytes
      type: count
      description: >
        Indicates the number of bytes missed in content gaps, which is representative of packet loss.  A value other than zero will normally cause protocol analysis to fail but some analysis may have been completed prior to the packet loss.
    - name: history
      type: string
      description: >
        Records the state history of connections as a string of letters.  The meaning of those letters is:
    - name: orig_pkts
      type: count
      description: >
        Number of packets that the originator sent. Only set if use_conn_size_analyzer = T.
    - name: orig_ip_bytes
      type: count
      description: >
        Number of IP level bytes that the originator sent (as seen on the wire, taken from the IP total_length header field). Only set if use_conn_size_analyzer = T.
    - name: resp_pkts
      type: count
      description: >
        Number of packets that the responder sent. Only set if use_conn_size_analyzer = T.
    - name: resp_ip_bytes
      type: count
      description: >
        Number of IP level bytes that the responder sent (as seen on the wire, taken from the IP total_length header field). Only set if use_conn_size_analyzer = T.
    - name: tunnel_parents
      type: set
      description: >
        If this connection was over a tunnel, indicate the uid values for any encapsulating parent connections used over the lifetime of this inner connection.
    - name: orig_l2_addr
      type: string
      description: >
        (present if policy/protocols/conn/mac-logging.bro is loaded)
    - name: resp_l2_addr
      type: string
      description: >
        (present if policy/protocols/conn/mac-logging.bro is loaded)
    - name: vlan
      type: int
      description: >
        (present if policy/protocols/conn/vlan-logging.bro is loaded)
    - name: inner_vlan
      type: int
      description: >
        (present if policy/protocols/conn/vlan-logging.bro is loaded)- name: dce_rpc
  type: group
  description: >
    Contains fields for the Bro dce_rpc logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: rtt
      type: interval
      description: >
        Round trip time from the request to the response. If either the request or response wasnt seen, this will be null.
    - name: named_pipe
      type: string
      description: >
        Remote pipe name.
    - name: endpoint
      type: string
      description: >
        Endpoint name looked up from the uuid.
    - name: operation
      type: string
      description: >
        Operation seen in the call.- name: dhcp
  type: group
  description: >
    Contains fields for the Bro dhcp logs.
  fields:
    - name: ts
      type: time
      description: >
        The earliest time at which a DHCP message over the associated connection is observed.
    - name: uid
      type: string
      description: >
        A unique identifier of the connection over which DHCP is occurring.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: mac
      type: string
      description: >
        Clients hardware address.
    - name: assigned_ip
      type: addr
      description: >
        Clients actual assigned IP address.
    - name: lease_time
      type: interval
      description: >
        IP address lease interval.
    - name: trans_id
      type: count
      description: >
        A random number chosen by the client for this transaction.- name: dnp3
  type: group
  description: >
    Contains fields for the Bro dnp3 logs.
  fields:
    - name: ts
      type: time
      description: >
        Time of the request.
    - name: uid
      type: string
      description: >
        Unique identifier for the connection.
    - name: id
      type: conn_id
      description: >
        Identifier for the connection.
    - name: fc_request
      type: string
      description: >
        The name of the function message in the request.
    - name: fc_reply
      type: string
      description: >
        The name of the function message in the reply.
    - name: iin
      type: count
      description: >
        The responses internal indication number.- name: dns
  type: group
  description: >
    Contains fields for the Bro dns logs.
  fields:
    - name: ts
      type: time
      description: >
        The earliest time at which a DNS protocol message over the associated connection is observed.
    - name: uid
      type: string
      description: >
        A unique identifier of the connection over which DNS messages are being transferred.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: proto
      type: transport_proto
      description: >
        The transport layer protocol of the connection.
    - name: trans_id
      type: count
      description: >
        A 16-bit identifier assigned by the program that generated the DNS query.  Also used in responses to match up replies to outstanding queries.
    - name: rtt
      type: interval
      description: >
        Round trip time for the query and response. This indicates the delay between when the request was seen until the answer started.
    - name: query
      type: string
      description: >
        The domain name that is the subject of the DNS query.
    - name: qclass
      type: count
      description: >
        The QCLASS value specifying the class of the query.
    - name: qclass_name
      type: string
      description: >
        A descriptive name for the class of the query.
    - name: qtype
      type: count
      description: >
        A QTYPE value specifying the type of the query.
    - name: qtype_name
      type: string
      description: >
        A descriptive name for the type of the query.
    - name: rcode
      type: count
      description: >
        The response code value in DNS response messages.
    - name: rcode_name
      type: string
      description: >
        A descriptive name for the response code value.
    - name: AA
      type: bool
      description: >
        The Authoritative Answer bit for response messages specifies that the responding name server is an authority for the domain name in the question section.
    - name: TC
      type: bool
      description: >
        The Truncation bit specifies that the message was truncated.
    - name: RD
      type: bool
      description: >
        The Recursion Desired bit in a request message indicates that the client wants recursive service for this query.
    - name: RA
      type: bool
      description: >
        The Recursion Available bit in a response message indicates that the name server supports recursive queries.
    - name: Z
      type: count
      description: >
        A reserved field that is usually zero in queries and responses.
    - name: answers
      type: vector
      description: >
        The set of resource descriptions in the query answer.
    - name: TTLs
      type: vector
      description: >
        The caching intervals of the associated RRs described by the answers field.
    - name: rejected
      type: bool
      description: >
        The DNS query was rejected by the server.
    - name: total_answers
      type: count
      description: >
        The total number of resource records in a reply messages answer section.
    - name: total_replies
      type: count
      description: >
        The total number of resource records in a reply messages answer, authority, and additional sections.
    - name: saw_query
      type: bool
      description: >
        Whether the full DNS query has been seen.
    - name: saw_reply
      type: bool
      description: >
        Whether the full DNS reply has been seen.
    - name: auth
      type: set
      description: >
        (present if policy/protocols/dns/auth-addl.bro is loaded)
    - name: addl
      type: set
      description: >
        (present if policy/protocols/dns/auth-addl.bro is loaded)- name: dpd
  type: group
  description: >
    Contains fields for the Bro dpd logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when protocol analysis failed.
    - name: uid
      type: string
      description: >
        Connection unique ID.
    - name: id
      type: conn_id
      description: >
        Connection ID containing the 4-tuple which identifies endpoints.
    - name: proto
      type: transport_proto
      description: >
        Transport protocol for the violation.
    - name: analyzer
      type: string
      description: >
        The analyzer that generated the violation.
    - name: failure_reason
      type: string
      description: >
        The textual reason for the analysis failure.
    - name: disabled_aids
      type: set
      description: >
        Disabled analyzer IDs.  This is only for internal tracking so as to not attempt to disable analyzers multiple times.
    - name: packet_segment
      type: string
      description: >
        (present if policy/frameworks/dpd/packet-segment-logging.bro is loaded)- name: files
  type: group
  description: >
    File analysis results
  fields:
    - name: ts
      type: time
      description: >
        The time when the file was first seen.
    - name: fuid
      type: string
      description: >
        An identifier associated with a single file.
    - name: tx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data sourced from.
    - name: rx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data traveled to.
    - name: conn_uids
      type: set
      description: >
        Connection UIDs over which the file was transferred.
    - name: source
      type: string
      description: >
        An identification of the source of the file data.  E.g. it may be a network protocol over which it was transferred, or a local file path which was read, or some other input source.
    - name: depth
      type: count
      description: >
        A value to represent the depth of this file in relation to its source.  In SMTP, it is the depth of the MIME attachment on the message.  In HTTP, it is the depth of the request within the TCP connection.
    - name: analyzers
      type: set
      description: >
        A set of analysis types done during the file analysis.
    - name: mime_type
      type: string
      description: >
        A mime type provided by the strongest file magic signature match against the bof_buffer field of fa_file, or in the cases where no buffering of the beginning of file occurs, an initial guess of the mime type based on the first data seen.
    - name: filename
      type: string
      description: >
        A filename for the file if one is available from the source for the file.  These will frequently come from Content-Disposition headers in network protocols.
    - name: duration
      type: interval
      description: >
        The duration the file was analyzed for.
    - name: local_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the data originated from the local network or not as determined by the configured Site::local_nets.
    - name: is_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the file is being sent by the originator of the connection or the responder.
    - name: seen_bytes
      type: count
      description: >
        Number of bytes provided to the file analysis engine for the file.
    - name: total_bytes
      type: count
      description: >
        Total number of bytes that are supposed to comprise the full file.
    - name: missing_bytes
      type: count
      description: >
        The number of bytes in the file stream that were completely missed during the process of analysis e.g. due to dropped packets.
    - name: overflow_bytes
      type: count
      description: >
        The number of bytes in the file stream that were not delivered to stream file analyzers.  This could be overlapping bytes or bytes that couldnt be reassembled.
    - name: timedout
      type: bool
      description: >
        Whether the file analysis timed out at least once for the file.
    - name: parent_fuid
      type: string
      description: >
        Identifier associated with a container file from which this one was extracted as part of the file analysis.
    - name: md5
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: sha1
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: sha256
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: x509.ts
      type: time
      description: >
        Current timestamp.
    - name: x509.id
      type: string
      description: >
        File id of this certificate.
    - name: x509.certificate
      type: X509::Certificate
      description: >
        Basic information about the certificate.
    - name: x509.handle
      type: opaque
      description: >
        The opaque wrapping the certificate. Mainly used for the verify operations.
    - name: x509.extensions
      type: vector
      description: >
        All extensions that were encountered in the certificate.
    - name: x509.san
      type: X509::SubjectAlternativeName
      description: >
        Subject alternative name extension of the certificate.
    - name: x509.basic_constraints
      type: X509::BasicConstraints
      description: >
        Basic constraints extension of the certificate.
    - name: x509.logcert
      type: bool
      description: >
        (present if policy/protocols/ssl/log-hostcerts-only.bro is loaded)
    - name: extracted
      type: string
      description: >
        (present if base/files/extract/main.bro is loaded)
    - name: entropy
      type: double
      description: >
        (present if policy/frameworks/files/entropy-test-all-files.bro is loaded)
- name: ftp
  type: group
  description: >
    Contains fields for the Bro ftp logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the command was sent.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: user
      type: string
      description: >
        User name for the current FTP session.
    - name: password
      type: string
      description: >
        Password for the current FTP session if captured.
    - name: command
      type: string
      description: >
        Command given by the client.
    - name: arg
      type: string
      description: >
        Argument for the command if one is given.
    - name: mime_type
      type: string
      description: >
        Libmagic sniffed file type if the command indicates a file transfer.
    - name: file_size
      type: count
      description: >
        Size of the file if the command indicates a file transfer.
    - name: reply_code
      type: count
      description: >
        Reply code from the server in response to the command.
    - name: reply_msg
      type: string
      description: >
        Reply message from the server in response to the command.
    - name: data_channel.passive
      type: bool
      description: >
        Whether PASV mode is toggled for control channel.
    - name: data_channel.orig_h
      type: addr
      description: >
        The host that will be initiating the data connection.
    - name: data_channel.resp_h
      type: addr
      description: >
        The host that will be accepting the data connection.
    - name: data_channel.resp_p
      type: port
      description: >
        The port at which the acceptor is listening for the data connection.
    - name: cwd
      type: string
      description: >
        Current working directory that this session is in.  By making the default value ., we can indicate that unless something more concrete is discovered that the existing but unknown directory is ok to use.
    - name: cmdarg.ts
      type: time
      description: >
        Time when the command was sent.
    - name: cmdarg.cmd
      type: string
      description: >
        Command.
    - name: cmdarg.arg
      type: string
      description: >
        Argument for the command if one was given.
    - name: cmdarg.seq
      type: count
      description: >
        Counter to track how many commands have been executed.
    - name: pending_commands
      type: FTP::PendingCmds
      description: >
        
    - name: passive
      type: bool
      description: >
        Indicates if the session is in active or passive mode.
    - name: capture_password
      type: bool
      description: >
        Determines if the password will be captured for this request.
    - name: fuid
      type: string
      description: >
        (present if base/protocols/ftp/files.bro is loaded)
    - name: last_auth_requested
      type: string
      description: >
        (present if base/protocols/ftp/gridftp.bro is loaded)- name: http
  type: group
  description: >
    Contains fields for the Bro http logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the request happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: trans_depth
      type: count
      description: >
        Represents the pipelined depth into the connection of this request/response transaction.
    - name: method
      type: string
      description: >
        Verb used in the HTTP request (GET, POST, HEAD, etc.).
    - name: host
      type: string
      description: >
        Value of the HOST header.
    - name: uri
      type: string
      description: >
        URI used in the request.
    - name: referrer
      type: string
      description: >
        Value of the referer header.  The comment is deliberately misspelled like the standard declares, but the name used here is referrer spelled correctly.
    - name: version
      type: string
      description: >
        Value of the version portion of the request.
    - name: user_agent
      type: string
      description: >
        Value of the User-Agent header from the client.
    - name: request_body_len
      type: count
      description: >
        Actual uncompressed content size of the data transferred from the client.
    - name: response_body_len
      type: count
      description: >
        Actual uncompressed content size of the data transferred from the server.
    - name: status_code
      type: count
      description: >
        Status code returned by the server.
    - name: status_msg
      type: string
      description: >
        Status message returned by the server.
    - name: info_code
      type: count
      description: >
        Last seen 1xx informational reply code returned by the server.
    - name: info_msg
      type: string
      description: >
        Last seen 1xx informational reply message returned by the server.
    - name: tags
      type: set
      description: >
        A set of indicators of various attributes discovered and related to a particular request/response pair.
    - name: username
      type: string
      description: >
        Username if basic-auth is performed for the request.
    - name: password
      type: string
      description: >
        Password if basic-auth is performed for the request.
    - name: capture_password
      type: bool
      description: >
        Determines if the password will be captured for this request.
    - name: proxied
      type: set
      description: >
        All of the headers that may indicate if the request was proxied.
    - name: range_request
      type: bool
      description: >
        Indicates if this request can assume 206 partial content in response.
    - name: orig_fuids
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: orig_filenames
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: orig_mime_types
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: resp_fuids
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: resp_filenames
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: resp_mime_types
      type: vector
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: current_entity.filename
      type: string
      description: >
        Filename for the entity if discovered from a header.
    - name: orig_mime_depth
      type: count
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: resp_mime_depth
      type: count
      description: >
        (present if base/protocols/http/entities.bro is loaded)
    - name: client_header_names
      type: vector
      description: >
        (present if policy/protocols/http/header-names.bro is loaded)
    - name: server_header_names
      type: vector
      description: >
        (present if policy/protocols/http/header-names.bro is loaded)
    - name: omniture
      type: bool
      description: >
        (present if policy/protocols/http/software-browser-plugins.bro is loaded)
    - name: flash_version
      type: string
      description: >
        (present if policy/protocols/http/software-browser-plugins.bro is loaded)
    - name: cookie_vars
      type: vector
      description: >
        (present if policy/protocols/http/var-extraction-cookies.bro is loaded)
    - name: uri_vars
      type: vector
      description: >
        (present if policy/protocols/http/var-extraction-uri.bro is loaded)- name: intel
  type: group
  description: >
    Contains fields for the Bro intel logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp when the data was discovered.
    - name: uid
      type: string
      description: >
        If a connection was associated with this intelligence hit, this is the uid for the connection
    - name: id
      type: conn_id
      description: >
        If a connection was associated with this intelligence hit, this is the conn_id for the connection.
    - name: seen.indicator
      type: string
      description: >
        The string if the data is about a string.
    - name: seen.indicator_type
      type: Intel::Type
      description: >
        The type of data that the indicator represents.
    - name: seen.host
      type: addr
      description: >
        If the indicator type was Intel::ADDR, then this field will be present.
    - name: seen.where
      type: Intel::Where
      description: >
        Where the data was discovered.
    - name: seen.node
      type: string
      description: >
        The name of the node where the match was discovered.
    - name: seen.conn
      type: connection
      description: >
        If the data was discovered within a connection, the connection record should go here to give context to the data.
    - name: seen.uid
      type: string
      description: >
        If the data was discovered within a connection, the connection uid should go here to give context to the data. If the conn field is provided, this will be automatically filled out.
    - name: seen.f
      type: fa_file
      description: >
        (present if base/frameworks/intel/files.bro is loaded)
    - name: seen.fuid
      type: string
      description: >
        (present if base/frameworks/intel/files.bro is loaded)
    - name: matched
      type: Intel::TypeSet
      description: >
        
    - name: sources
      type: set
      description: >
        Sources which supplied data that resulted in this match.
    - name: fuid
      type: string
      description: >
        (present if base/frameworks/intel/files.bro is loaded)
    - name: file_mime_type
      type: string
      description: >
        (present if base/frameworks/intel/files.bro is loaded)
    - name: file_desc
      type: string
      description: >
        (present if base/frameworks/intel/files.bro is loaded)- name: irc
  type: group
  description: >
    Contains fields for the Bro irc logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp when the command was seen.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: nick
      type: string
      description: >
        Nickname given for the connection.
    - name: user
      type: string
      description: >
        Username given for the connection.
    - name: command
      type: string
      description: >
        Command given by the client.
    - name: value
      type: string
      description: >
        Value for the command given by the client.
    - name: addl
      type: string
      description: >
        Any additional data for the command.
    - name: dcc_file_name
      type: string
      description: >
        (present if base/protocols/irc/dcc-send.bro is loaded)
    - name: dcc_file_size
      type: count
      description: >
        (present if base/protocols/irc/dcc-send.bro is loaded)
    - name: dcc_mime_type
      type: string
      description: >
        (present if base/protocols/irc/dcc-send.bro is loaded)
    - name: fuid
      type: string
      description: >
        (present if base/protocols/irc/files.bro is loaded)- name: kerberos
  type: group
  description: >
    Contains fields for the Bro kerberos logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: request_type
      type: string
      description: >
        Request type - Authentication Service (AS) or Ticket Granting Service (TGS)
    - name: client
      type: string
      description: >
        Client
    - name: service
      type: string
      description: >
        Service
    - name: success
      type: bool
      description: >
        Request result
    - name: error_code
      type: count
      description: >
        Error code
    - name: error_msg
      type: string
      description: >
        Error message
    - name: from
      type: time
      description: >
        Ticket valid from
    - name: till
      type: time
      description: >
        Ticket valid till
    - name: cipher
      type: string
      description: >
        Ticket encryption type
    - name: forwardable
      type: bool
      description: >
        Forwardable ticket requested
    - name: renewable
      type: bool
      description: >
        Renewable ticket requested
    - name: logged
      type: bool
      description: >
        Weve already logged this
    - name: client_cert.ts
      type: time
      description: >
        The time when the file was first seen.
    - name: client_cert.fuid
      type: string
      description: >
        An identifier associated with a single file.
    - name: client_cert.tx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data sourced from.
    - name: client_cert.rx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data traveled to.
    - name: client_cert.conn_uids
      type: set
      description: >
        Connection UIDs over which the file was transferred.
    - name: client_cert.source
      type: string
      description: >
        An identification of the source of the file data.  E.g. it may be a network protocol over which it was transferred, or a local file path which was read, or some other input source.
    - name: client_cert.depth
      type: count
      description: >
        A value to represent the depth of this file in relation to its source.  In SMTP, it is the depth of the MIME attachment on the message.  In HTTP, it is the depth of the request within the TCP connection.
    - name: client_cert.analyzers
      type: set
      description: >
        A set of analysis types done during the file analysis.
    - name: client_cert.mime_type
      type: string
      description: >
        A mime type provided by the strongest file magic signature match against the bof_buffer field of fa_file, or in the cases where no buffering of the beginning of file occurs, an initial guess of the mime type based on the first data seen.
    - name: client_cert.filename
      type: string
      description: >
        A filename for the file if one is available from the source for the file.  These will frequently come from Content-Disposition headers in network protocols.
    - name: client_cert.duration
      type: interval
      description: >
        The duration the file was analyzed for.
    - name: client_cert.local_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the data originated from the local network or not as determined by the configured Site::local_nets.
    - name: client_cert.is_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the file is being sent by the originator of the connection or the responder.
    - name: client_cert.seen_bytes
      type: count
      description: >
        Number of bytes provided to the file analysis engine for the file.
    - name: client_cert.total_bytes
      type: count
      description: >
        Total number of bytes that are supposed to comprise the full file.
    - name: client_cert.missing_bytes
      type: count
      description: >
        The number of bytes in the file stream that were completely missed during the process of analysis e.g. due to dropped packets.
    - name: client_cert.overflow_bytes
      type: count
      description: >
        The number of bytes in the file stream that were not delivered to stream file analyzers.  This could be overlapping bytes or bytes that couldnt be reassembled.
    - name: client_cert.timedout
      type: bool
      description: >
        Whether the file analysis timed out at least once for the file.
    - name: client_cert.parent_fuid
      type: string
      description: >
        Identifier associated with a container file from which this one was extracted as part of the file analysis.
    - name: client_cert.md5
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: client_cert.sha1
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: client_cert.sha256
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: client_cert.x509
      type: X509::Info
      description: >
        (present if base/files/x509/main.bro is loaded)
    - name: client_cert.extracted
      type: string
      description: >
        (present if base/files/extract/main.bro is loaded)
    - name: client_cert.entropy
      type: double
      description: >
        (present if policy/frameworks/files/entropy-test-all-files.bro is loaded)
    - name: client_cert_subject
      type: string
      description: >
        (present if base/protocols/krb/files.bro is loaded)
    - name: client_cert_fuid
      type: string
      description: >
        (present if base/protocols/krb/files.bro is loaded)
    - name: server_cert.ts
      type: time
      description: >
        The time when the file was first seen.
    - name: server_cert.fuid
      type: string
      description: >
        An identifier associated with a single file.
    - name: server_cert.tx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data sourced from.
    - name: server_cert.rx_hosts
      type: set
      description: >
        If this file was transferred over a network connection this should show the host or hosts that the data traveled to.
    - name: server_cert.conn_uids
      type: set
      description: >
        Connection UIDs over which the file was transferred.
    - name: server_cert.source
      type: string
      description: >
        An identification of the source of the file data.  E.g. it may be a network protocol over which it was transferred, or a local file path which was read, or some other input source.
    - name: server_cert.depth
      type: count
      description: >
        A value to represent the depth of this file in relation to its source.  In SMTP, it is the depth of the MIME attachment on the message.  In HTTP, it is the depth of the request within the TCP connection.
    - name: server_cert.analyzers
      type: set
      description: >
        A set of analysis types done during the file analysis.
    - name: server_cert.mime_type
      type: string
      description: >
        A mime type provided by the strongest file magic signature match against the bof_buffer field of fa_file, or in the cases where no buffering of the beginning of file occurs, an initial guess of the mime type based on the first data seen.
    - name: server_cert.filename
      type: string
      description: >
        A filename for the file if one is available from the source for the file.  These will frequently come from Content-Disposition headers in network protocols.
    - name: server_cert.duration
      type: interval
      description: >
        The duration the file was analyzed for.
    - name: server_cert.local_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the data originated from the local network or not as determined by the configured Site::local_nets.
    - name: server_cert.is_orig
      type: bool
      description: >
        If the source of this file is a network connection, this field indicates if the file is being sent by the originator of the connection or the responder.
    - name: server_cert.seen_bytes
      type: count
      description: >
        Number of bytes provided to the file analysis engine for the file.
    - name: server_cert.total_bytes
      type: count
      description: >
        Total number of bytes that are supposed to comprise the full file.
    - name: server_cert.missing_bytes
      type: count
      description: >
        The number of bytes in the file stream that were completely missed during the process of analysis e.g. due to dropped packets.
    - name: server_cert.overflow_bytes
      type: count
      description: >
        The number of bytes in the file stream that were not delivered to stream file analyzers.  This could be overlapping bytes or bytes that couldnt be reassembled.
    - name: server_cert.timedout
      type: bool
      description: >
        Whether the file analysis timed out at least once for the file.
    - name: server_cert.parent_fuid
      type: string
      description: >
        Identifier associated with a container file from which this one was extracted as part of the file analysis.
    - name: server_cert.md5
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: server_cert.sha1
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: server_cert.sha256
      type: string
      description: >
        (present if base/files/hash/main.bro is loaded)
    - name: server_cert.x509
      type: X509::Info
      description: >
        (present if base/files/x509/main.bro is loaded)
    - name: server_cert.extracted
      type: string
      description: >
        (present if base/files/extract/main.bro is loaded)
    - name: server_cert.entropy
      type: double
      description: >
        (present if policy/frameworks/files/entropy-test-all-files.bro is loaded)
    - name: server_cert_subject
      type: string
      description: >
        (present if base/protocols/krb/files.bro is loaded)
    - name: server_cert_fuid
      type: string
      description: >
        (present if base/protocols/krb/files.bro is loaded)- name: known_certs
  type: group
  description: >
    Contains fields for the Bro known_certs logs.
  fields:
    - name: ts
      type: time
      description: >
        The timestamp when the certificate was detected.
    - name: host
      type: addr
      description: >
        The address that offered the certificate.
    - name: port_num
      type: port
      description: >
        If the certificate was handed out by a server, this is the port that the server was listening on.
    - name: subject
      type: string
      description: >
        Certificate subject.
    - name: issuer_subject
      type: string
      description: >
        Certificate issuer subject.
    - name: serial
      type: string
      description: >
        Serial number for the certificate.- name: known_devices
  type: group
  description: >
    Contains fields for the Bro known_devices logs.
  fields:
    - name: ts
      type: time
      description: >
        The timestamp at which the host was detected.
    - name: mac
      type: string
      description: >
        The MAC address that was detected.
    - name: dhcp_host_name
      type: string
      description: >
        (present if policy/protocols/dhcp/known-devices-and-hostnames.bro is loaded)- name: known_hosts
  type: group
  description: >
    Contains fields for the Bro known_hosts logs.
  fields:
    - name: ts
      type: time
      description: >
        The timestamp at which the host was detected.
    - name: host
      type: addr
      description: >
        The address that was detected originating or responding to a TCP connection.- name: known_modbus
  type: group
  description: >
    Contains fields for the Bro known_modbus logs.
  fields:
    - name: ts
      type: time
      description: >
        The time the device was discovered.
    - name: host
      type: addr
      description: >
        The IP address of the host.
    - name: device_type
      type: Known::ModbusDeviceType
      description: >
        - name: known_services
  type: group
  description: >
    Contains fields for the Bro known_services logs.
  fields:
    - name: ts
      type: time
      description: >
        The time at which the service was detected.
    - name: host
      type: addr
      description: >
        The host address on which the service is running.
    - name: port_num
      type: port
      description: >
        The port number on which the service is running.
    - name: port_proto
      type: transport_proto
      description: >
        The transport-layer protocol which the service uses.
    - name: service
      type: set
      description: >
        A set of protocols that match the services connection payloads.- name: loaded_scripts
  type: group
  description: >
    Contains fields for the Bro loaded_scripts logs.
  fields:
    - name: name
      type: string
      description: >
        Name of the script loaded potentially with spaces included before the file name to indicate load depth.  The convention is two spaces per level of depth.- name: modbus
  type: group
  description: >
    Contains fields for the Bro modbus logs.
  fields:
    - name: ts
      type: time
      description: >
        Time of the request.
    - name: uid
      type: string
      description: >
        Unique identifier for the connection.
    - name: id
      type: conn_id
      description: >
        Identifier for the connection.
    - name: func
      type: string
      description: >
        The name of the function message that was sent.
    - name: exception
      type: string
      description: >
        The exception if the response was a failure.
    - name: track_address
      type: count
      description: >
        (present if policy/protocols/modbus/track-memmap.bro is loaded)- name: modbus_register_change
  type: group
  description: >
    Contains fields for the Bro modbus_register_change logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for the detected register change.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        Connection ID.
    - name: register
      type: count
      description: >
        The device memory offset.
    - name: old_val
      type: count
      description: >
        The old value stored in the register.
    - name: new_val
      type: count
      description: >
        The new value stored in the register.
    - name: delta
      type: interval
      description: >
        The time delta between when the old_val and new_val were seen.- name: mysql
  type: group
  description: >
    Contains fields for the Bro mysql logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: cmd
      type: string
      description: >
        The command that was issued
    - name: arg
      type: string
      description: >
        The argument issued to the command
    - name: success
      type: bool
      description: >
        Did the server tell us that the command succeeded?
    - name: rows
      type: count
      description: >
        The number of affected rows, if any
    - name: response
      type: string
      description: >
        Server message, if any- name: netcontrol
  type: group
  description: >
    Contains fields for the Bro netcontrol logs.
  fields:
    - name: ts
      type: time
      description: >
        Time at which the recorded activity occurred.
    - name: rule_id
      type: string
      description: >
        ID of the rule; unique during each Bro run.
    - name: category
      type: NetControl::InfoCategory
      description: >
        
    - name: cmd
      type: string
      description: >
        The command the log entry is about.
    - name: state
      type: NetControl::InfoState
      description: >
        
    - name: action
      type: string
      description: >
        String describing an action the entry is about.
    - name: target
      type: NetControl::TargetType
      description: >
        
    - name: entity_type
      type: string
      description: >
        Type of the entity the log entry is about.
    - name: entity
      type: string
      description: >
        String describing the entity the log entry is about.
    - name: mod
      type: string
      description: >
        String describing the optional modification of the entry (e.h. redirect)
    - name: msg
      type: string
      description: >
        String with an additional message.
    - name: priority
      type: int
      description: >
        Number describing the priority of the log entry.
    - name: expire
      type: interval
      description: >
        Expiry time of the log entry.
    - name: location
      type: string
      description: >
        Location where the underlying action was triggered.
    - name: plugin
      type: string
      description: >
        Plugin triggering the log entry.- name: netcontrol_catch_release
  type: group
  description: >
    Contains fields for the Bro netcontrol_catch_release logs.
  fields:
    - name: ts
      type: time
      description: >
        The absolute time indicating when the action for this log-line occured.
    - name: rule_id
      type: string
      description: >
        The rule id that this log line refers to.
    - name: ip
      type: addr
      description: >
        The IP address that this line refers to.
    - name: action
      type: NetControl::CatchReleaseActions
      description: >
        
    - name: block_interval
      type: interval
      description: >
        The current block_interaval (for how long the address is blocked).
    - name: watch_interval
      type: interval
      description: >
        The current watch_interval (for how long the address will be watched and re-block if it reappears).
    - name: blocked_until
      type: time
      description: >
        The absolute time until which the address is blocked.
    - name: watched_until
      type: time
      description: >
        The absolute time until which the address will be monitored.
    - name: num_blocked
      type: count
      description: >
        Number of times that this address was blocked in the current cycle.
    - name: location
      type: string
      description: >
        The user specified location string.
    - name: message
      type: string
      description: >
        Additional informational string by the catch and release framework about this log-line.- name: netcontrol_drop
  type: group
  description: >
    Contains fields for the Bro netcontrol_drop logs.
  fields:
    - name: ts
      type: time
      description: >
        Time at which the recorded activity occurred.
    - name: rule_id
      type: string
      description: >
        ID of the rule; unique during each Bro run.
    - name: orig_h
      type: addr
      description: >
        The originators IP address.
    - name: orig_p
      type: port
      description: >
        The originators port number.
    - name: resp_h
      type: addr
      description: >
        The responders IP address.
    - name: resp_p
      type: port
      description: >
        The responders port number.
    - name: expire
      type: interval
      description: >
        Expiry time of the shunt.
    - name: location
      type: string
      description: >
        Location where the underlying action was triggered.- name: netcontrol_shunt
  type: group
  description: >
    Contains fields for the Bro netcontrol_shunt logs.
  fields:
    - name: ts
      type: time
      description: >
        Time at which the recorded activity occurred.
    - name: rule_id
      type: string
      description: >
        ID of the rule; unique during each Bro run.
    - name: f
      type: flow_id
      description: >
        Flow ID of the shunted flow.
    - name: expire
      type: interval
      description: >
        Expiry time of the shunt.
    - name: location
      type: string
      description: >
        Location where the underlying action was triggered.- name: notice
  type: group
  description: >
    Contains fields for the Bro notice logs.
  fields:
    - name: ts
      type: time
      description: >
        An absolute time indicating when the notice occurred, defaults to the current network time.
    - name: uid
      type: string
      description: >
        A connection UID which uniquely identifies the endpoints concerned with the notice.
    - name: id
      type: conn_id
      description: >
        A connection 4-tuple identifying the endpoints concerned with the notice.
    - name: conn
      type: connection
      description: >
        A shorthand way of giving the uid and id to a notice.  The reference to the actual connection will be deleted after applying the notice policy.
    - name: iconn
      type: icmp_conn
      description: >
        A shorthand way of giving the uid and id to a notice.  The reference to the actual connection will be deleted after applying the notice policy.
    - name: f
      type: fa_file
      description: >
        A file record if the notice is related to a file.  The reference to the actual fa_file record will be deleted after applying the notice policy.
    - name: fuid
      type: string
      description: >
        A file unique ID if this notice is related to a file.  If the f field is provided, this will be automatically filled out.
    - name: file_mime_type
      type: string
      description: >
        A mime type if the notice is related to a file.  If the f field is provided, this will be automatically filled out.
    - name: file_desc
      type: string
      description: >
        Frequently files can be described to give a bit more context.  This field will typically be automatically filled out from an fa_file record.  For example, if a notice was related to a file over HTTP, the URL of the request would be shown.
    - name: proto
      type: transport_proto
      description: >
        The transport protocol. Filled automatically when either conn, iconn or p is specified.
    - name: note
      type: Notice::Type
      description: >
        
    - name: msg
      type: string
      description: >
        The human readable message for the notice.
    - name: sub
      type: string
      description: >
        The human readable sub-message.
    - name: src
      type: addr
      description: >
        Source address, if we dont have a conn_id.
    - name: dst
      type: addr
      description: >
        Destination address.
    - name: p
      type: port
      description: >
        Associated port, if we dont have a conn_id.
    - name: n
      type: count
      description: >
        Associated count, or perhaps a status code.
    - name: src_peer
      type: event_peer
      description: >
        Peer that raised this notice.
    - name: peer_descr
      type: string
      description: >
        Textual description for the peer that raised this notice.
    - name: actions
      type: Notice::ActionSet
      description: >
        
    - name: email_body_sections
      type: vector
      description: >
        By adding chunks of text into this element, other scripts can expand on notices that are being emailed.  The normal way to add text is to extend the vector by handling the Notice::notice event and modifying the notice in place.
    - name: email_delay_tokens
      type: set
      description: >
        Adding a string token to this set will cause the notice frameworks built-in emailing functionality to delay sending the email until either the token has been removed or the email has been delayed for Notice::max_email_delay.
    - name: identifier
      type: string
      description: >
        This field is to be provided when a notice is generated for the purpose of deduplicating notices.  The identifier string should be unique for a single instance of the notice.  This field should be filled out in almost all cases when generating notices to define when a notice is conceptually a duplicate of a previous notice.
    - name: suppress_for
      type: interval
      description: >
        This field indicates the length of time that this unique notice should be suppressed.
    - name: dropped
      type: bool
      description: >
        (present if base/frameworks/notice/actions/drop.bro is loaded)
    - name: remote_location
      type: geo_location
      description: >
        (present if base/frameworks/notice/actions/add-geodata.bro is loaded)- name: ntlm
  type: group
  description: >
    Contains fields for the Bro ntlm logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: username
      type: string
      description: >
        Username given by the client.
    - name: hostname
      type: string
      description: >
        Hostname given by the client.
    - name: domainname
      type: string
      description: >
        Domainname given by the client.
    - name: success
      type: bool
      description: >
        Indicate whether or not the authentication was successful.
    - name: status
      type: string
      description: >
        A string representation of the status code that was returned in response to the authentication attempt.
    - name: done
      type: bool
      description: >
        Internally used field to indicate if the login attempt has already been logged.- name: openflow
  type: group
  description: >
    Contains fields for the Bro openflow logs.
  fields:
    - name: ts
      type: time
      description: >
        Network time.
    - name: dpid
      type: count
      description: >
        OpenFlow switch datapath id.
    - name: match.in_port
      type: count
      description: >
        
    - name: match.dl_src
      type: string
      description: >
        
    - name: match.dl_dst
      type: string
      description: >
        
    - name: match.dl_vlan
      type: count
      description: >
        
    - name: match.dl_vlan_pcp
      type: count
      description: >
        
    - name: match.dl_type
      type: count
      description: >
        
    - name: match.nw_tos
      type: count
      description: >
        
    - name: match.nw_proto
      type: count
      description: >
        
    - name: match.nw_src
      type: subnet
      description: >
        
    - name: match.nw_dst
      type: subnet
      description: >
        
    - name: match.tp_src
      type: count
      description: >
        
    - name: match.tp_dst
      type: count
      description: >
        
    - name: flow_mod.cookie
      type: count
      description: >
        Opaque controller-issued identifier.
    - name: flow_mod.table_id
      type: count
      description: >
        Table to put the flow in. OFPTT_ALL can be used for delete, to delete flows from all matching tables.
    - name: flow_mod.command
      type: OpenFlow::ofp_flow_mod_command
      description: >
        One of OFPFC_*.
    - name: flow_mod.idle_timeout
      type: count
      description: >
        Idle time before discarding (seconds).
    - name: flow_mod.hard_timeout
      type: count
      description: >
        Max time before discarding (seconds).
    - name: flow_mod.priority
      type: count
      description: >
        Priority level of flow entry.
    - name: flow_mod.out_port
      type: count
      description: >
        For OFPFC_DELETE* commands, require matching entried to include this as an output port/group. OFPP_ANY/OFPG_ANY means no restrictions.- name: packet_filter
  type: group
  description: >
    Contains fields for the Bro packet_filter logs.
  fields:
    - name: ts
      type: time
      description: >
        The time at which the packet filter installation attempt was made.
    - name: node
      type: string
      description: >
        This is a string representation of the node that applied this packet filter.  Its mostly useful in the context of dynamically changing filters on clusters.
    - name: filter
      type: string
      description: >
        The packet filter that is being set.
    - name: init
      type: bool
      description: >
        Indicate if this is the filter set during initialization.
    - name: success
      type: bool
      description: >
        Indicate if the filter was applied successfully.- name: pe
  type: group
  description: >
    Contains fields for the Bro pe logs.
  fields:
    - name: ts
      type: time
      description: >
        Current timestamp.
    - name: id
      type: string
      description: >
        File id of this portable executable file.
    - name: machine
      type: string
      description: >
        The target machine that the file was compiled for.
    - name: compile_ts
      type: time
      description: >
        The time that the file was created at.
    - name: os
      type: string
      description: >
        The required operating system.
    - name: subsystem
      type: string
      description: >
        The subsystem that is required to run this file.
    - name: is_exe
      type: bool
      description: >
        Is the file an executable, or just an object file?
    - name: is_64bit
      type: bool
      description: >
        Is the file a 64-bit executable?
    - name: uses_aslr
      type: bool
      description: >
        Does the file support Address Space Layout Randomization?
    - name: uses_dep
      type: bool
      description: >
        Does the file support Data Execution Prevention?
    - name: uses_code_integrity
      type: bool
      description: >
        Does the file enforce code integrity checks?
    - name: uses_seh
      type: bool
      description: >
        Does the file use structured exception handing?
    - name: has_import_table
      type: bool
      description: >
        Does the file have an import table?
    - name: has_export_table
      type: bool
      description: >
        Does the file have an export table?
    - name: has_cert_table
      type: bool
      description: >
        Does the file have an attribute certificate table?
    - name: has_debug_data
      type: bool
      description: >
        Does the file have a debug table?
    - name: section_names
      type: vector
      description: >
        The names of the sections, in order.- name: radius
  type: group
  description: >
    Contains fields for the Bro radius logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: username
      type: string
      description: >
        The username, if present.
    - name: mac
      type: string
      description: >
        MAC address, if present.
    - name: remote_ip
      type: addr
      description: >
        Remote IP address, if present.
    - name: connect_info
      type: string
      description: >
        Connect info, if present.
    - name: result
      type: string
      description: >
        Successful or failed authentication.
    - name: logged
      type: bool
      description: >
        Whether this has already been logged and can be ignored.- name: rdp
  type: group
  description: >
    Contains fields for the Bro rdp logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: cookie
      type: string
      description: >
        Cookie value used by the client machine. This is typically a username.
    - name: result
      type: string
      description: >
        Status result for the connection.  Its a mix between RDP negotation failure messages and GCC server create response messages.
    - name: security_protocol
      type: string
      description: >
        Security protocol chosen by the server.
    - name: keyboard_layout
      type: string
      description: >
        Keyboard layout (language) of the client machine.
    - name: client_build
      type: string
      description: >
        RDP client version used by the client machine.
    - name: client_name
      type: string
      description: >
        Name of the client machine.
    - name: client_dig_product_id
      type: string
      description: >
        Product ID of the client machine.
    - name: desktop_width
      type: count
      description: >
        Desktop width of the client machine.
    - name: desktop_height
      type: count
      description: >
        Desktop height of the client machine.
    - name: requested_color_depth
      type: string
      description: >
        The color depth requested by the client in the high_color_depth field.
    - name: cert_type
      type: string
      description: >
        If the connection is being encrypted with native RDP encryption, this is the type of cert being used.
    - name: cert_count
      type: count
      description: >
        The number of certs seen.  X.509 can transfer an entire certificate chain.
    - name: cert_permanent
      type: bool
      description: >
        Indicates if the provided certificate or certificate chain is permanent or temporary.
    - name: encryption_level
      type: string
      description: >
        Encryption level of the connection.
    - name: encryption_method
      type: string
      description: >
        Encryption method of the connection.
    - name: analyzer_id
      type: count
      description: >
        The analyzer ID used for the analyzer instance attached to each connection.  It is not used for logging since its a meaningless arbitrary number.
    - name: done
      type: bool
      description: >
        Track status of logging RDP connections.
    - name: ssl
      type: bool
      description: >
        (present if policy/protocols/rdp/indicate_ssl.bro is loaded)- name: reporter
  type: group
  description: >
    Contains fields for the Bro reporter logs.
  fields:
    - name: ts
      type: time
      description: >
        The network time at which the reporter event was generated.
    - name: level
      type: Reporter::Level
      description: >
        
    - name: message
      type: string
      description: >
        An info/warning/error message that could have either been generated from the internal Bro core or at the scripting-layer.
    - name: location
      type: string
      description: >
        This is the location in a Bro script where the message originated. Not all reporter messages will have locations in them though.- name: rfb
  type: group
  description: >
    Contains fields for the Bro rfb logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the event happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: client_major_version
      type: string
      description: >
        Major version of the client.
    - name: client_minor_version
      type: string
      description: >
        Minor version of the client.
    - name: server_major_version
      type: string
      description: >
        Major version of the server.
    - name: server_minor_version
      type: string
      description: >
        Minor version of the server.
    - name: authentication_method
      type: string
      description: >
        Identifier of authentication method used.
    - name: auth
      type: bool
      description: >
        Whether or not authentication was successful.
    - name: share_flag
      type: bool
      description: >
        Whether the client has an exclusive or a shared session.
    - name: desktop_name
      type: string
      description: >
        Name of the screen that is being shared.
    - name: width
      type: count
      description: >
        Width of the screen that is being shared.
    - name: height
      type: count
      description: >
        Height of the screen that is being shared.
    - name: done
      type: bool
      description: >
        Internally used value to determine if this connection has already been logged.- name: signatures
  type: group
  description: >
    Contains fields for the Bro signatures logs.
  fields:
    - name: ts
      type: time
      description: >
        The network time at which a signature matching type of event to be logged has occurred.
    - name: uid
      type: string
      description: >
        A unique identifier of the connection which triggered the signature match event.
    - name: src_addr
      type: addr
      description: >
        The host which triggered the signature match event.
    - name: src_port
      type: port
      description: >
        The host port on which the signature-matching activity occurred.
    - name: dst_addr
      type: addr
      description: >
        The destination host which was sent the payload that triggered the signature match.
    - name: dst_port
      type: port
      description: >
        The destination host port which was sent the payload that triggered the signature match.
    - name: note
      type: Notice::Type
      description: >
        
    - name: sig_id
      type: string
      description: >
        The name of the signature that matched.
    - name: event_msg
      type: string
      description: >
        A more descriptive message of the signature-matching event.
    - name: sub_msg
      type: string
      description: >
        Extracted payload data or extra message.
    - name: sig_count
      type: count
      description: >
        Number of sigs, usually from summary count.
    - name: host_count
      type: count
      description: >
        Number of hosts, from a summary count.- name: sip
  type: group
  description: >
    Contains fields for the Bro sip logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for when the request happened.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: trans_depth
      type: count
      description: >
        Represents the pipelined depth into the connection of this request/response transaction.
    - name: method
      type: string
      description: >
        Verb used in the SIP request (INVITE, REGISTER etc.).
    - name: uri
      type: string
      description: >
        URI used in the request.
    - name: date
      type: string
      description: >
        Contents of the Date: header from the client
    - name: request_from
      type: string
      description: >
        Contents of the request From: header Note: The tag= value thats usually appended to the sender is stripped off and not logged.
    - name: request_to
      type: string
      description: >
        Contents of the To: header
    - name: response_from
      type: string
      description: >
        Contents of the response From: header Note: The tag= value thats usually appended to the sender is stripped off and not logged.
    - name: response_to
      type: string
      description: >
        Contents of the response To: header
    - name: reply_to
      type: string
      description: >
        Contents of the Reply-To: header
    - name: call_id
      type: string
      description: >
        Contents of the Call-ID: header from the client
    - name: seq
      type: string
      description: >
        Contents of the CSeq: header from the client
    - name: subject
      type: string
      description: >
        Contents of the Subject: header from the client
    - name: request_path
      type: vector
      description: >
        The client message transmission path, as extracted from the headers.
    - name: response_path
      type: vector
      description: >
        The server message transmission path, as extracted from the headers.
    - name: user_agent
      type: string
      description: >
        Contents of the User-Agent: header from the client
    - name: status_code
      type: count
      description: >
        Status code returned by the server.
    - name: status_msg
      type: string
      description: >
        Status message returned by the server.
    - name: warning
      type: string
      description: >
        Contents of the Warning: header
    - name: request_body_len
      type: count
      description: >
        Contents of the Content-Length: header from the client
    - name: response_body_len
      type: count
      description: >
        Contents of the Content-Length: header from the server
    - name: content_type
      type: string
      description: >
        Contents of the Content-Type: header from the server- name: smb_cmd
  type: group
  description: >
    Contains fields for the Bro smb_cmd logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp of the command request.
    - name: uid
      type: string
      description: >
        Unique ID of the connection the request was sent over.
    - name: id
      type: conn_id
      description: >
        ID of the connection the request was sent over.
    - name: command
      type: string
      description: >
        The command sent by the client.
    - name: sub_command
      type: string
      description: >
        The subcommand sent by the client, if present.
    - name: argument
      type: string
      description: >
        Command argument sent by the client, if any.
    - name: status
      type: string
      description: >
        Server reply to the clients command.
    - name: rtt
      type: interval
      description: >
        Round trip time from the request to the response.
    - name: version
      type: string
      description: >
        Version of SMB for the command.
    - name: username
      type: string
      description: >
        Authenticated username, if available.
    - name: tree
      type: string
      description: >
        If this is related to a tree, this is the tree that was used for the current command.
    - name: tree_service
      type: string
      description: >
        The type of tree (disk share, printer share, named pipe, etc.).
    - name: referenced_file.ts
      type: time
      description: >
        Time when the file was first discovered.
    - name: referenced_file.uid
      type: string
      description: >
        Unique ID of the connection the file was sent over.
    - name: referenced_file.id
      type: conn_id
      description: >
        ID of the connection the file was sent over.
    - name: referenced_file.fuid
      type: string
      description: >
        Unique ID of the file.
    - name: referenced_file.action
      type: SMB::Action
      description: >
        Action this log record represents.
    - name: referenced_file.path
      type: string
      description: >
        Path pulled from the tree this file was transferred to or from.
    - name: referenced_file.name
      type: string
      description: >
        Filename if one was seen.
    - name: referenced_file.size
      type: count
      description: >
        Total size of the file.
    - name: referenced_file.prev_name
      type: string
      description: >
        If the rename action was seen, this will be the files previous name.
    - name: referenced_file.times
      type: SMB::MACTimes
      description: >
        Last time this file was modified.
    - name: referenced_file.fid
      type: count
      description: >
        ID referencing this file.
    - name: referenced_file.uuid
      type: string
      description: >
        UUID referencing this file if DCE/RPC.
    - name: referenced_tree.ts
      type: time
      description: >
        Time when the tree was mapped.
    - name: referenced_tree.uid
      type: string
      description: >
        Unique ID of the connection the tree was mapped over.
    - name: referenced_tree.id
      type: conn_id
      description: >
        ID of the connection the tree was mapped over.
    - name: referenced_tree.path
      type: string
      description: >
        Name of the tree path.
    - name: referenced_tree.service
      type: string
      description: >
        The type of resource of the tree (disk share, printer share, named pipe, etc.).
    - name: referenced_tree.native_file_system
      type: string
      description: >
        File system of the tree.
    - name: referenced_tree.share_type
      type: string
      description: >
        If this is SMB2, a share type will be included.  For SMB1, the type of share will be deduced and included as well.
    - name: smb1_offered_dialects
      type: string_vec
      description: >
        (present if policy/protocols/smb/smb1-main.bro is loaded)
    - name: smb2_offered_dialects
      type: index_vec
      description: >
        (present if policy/protocols/smb/smb2-main.bro is loaded)- name: smb_files
  type: group
  description: >
    Contains fields for the Bro smb_files logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the file was first discovered.
    - name: uid
      type: string
      description: >
        Unique ID of the connection the file was sent over.
    - name: id
      type: conn_id
      description: >
        ID of the connection the file was sent over.
    - name: fuid
      type: string
      description: >
        Unique ID of the file.
    - name: action
      type: SMB::Action
      description: >
        
    - name: path
      type: string
      description: >
        Path pulled from the tree this file was transferred to or from.
    - name: name
      type: string
      description: >
        Filename if one was seen.
    - name: size
      type: count
      description: >
        Total size of the file.
    - name: prev_name
      type: string
      description: >
        If the rename action was seen, this will be the files previous name.
    - name: times.modified
      type: time
      description: >
        The time when data was last written to the file.
    - name: times.accessed
      type: time
      description: >
        The time when the file was last accessed.
    - name: times.created
      type: time
      description: >
        The time the file was created.
    - name: times.changed
      type: time
      description: >
        The time when the file was last modified.
    - name: fid
      type: count
      description: >
        ID referencing this file.
    - name: uuid
      type: string
      description: >
        UUID referencing this file if DCE/RPC.- name: smb_mapping
  type: group
  description: >
    Contains fields for the Bro smb_mapping logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the tree was mapped.
    - name: uid
      type: string
      description: >
        Unique ID of the connection the tree was mapped over.
    - name: id
      type: conn_id
      description: >
        ID of the connection the tree was mapped over.
    - name: path
      type: string
      description: >
        Name of the tree path.
    - name: service
      type: string
      description: >
        The type of resource of the tree (disk share, printer share, named pipe, etc.).
    - name: native_file_system
      type: string
      description: >
        File system of the tree.
    - name: share_type
      type: string
      description: >
        If this is SMB2, a share type will be included.  For SMB1, the type of share will be deduced and included as well.- name: smtp
  type: group
  description: >
    Contains fields for the Bro smtp logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the message was first seen.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: trans_depth
      type: count
      description: >
        A count to represent the depth of this message transaction in a single connection where multiple messages were transferred.
    - name: helo
      type: string
      description: >
        Contents of the Helo header.
    - name: mailfrom
      type: string
      description: >
        Email addresses found in the From header.
    - name: rcptto
      type: set
      description: >
        Email addresses found in the Rcpt header.
    - name: date
      type: string
      description: >
        Contents of the Date header.
    - name: from
      type: string
      description: >
        Contents of the From header.
    - name: to
      type: set
      description: >
        Contents of the To header.
    - name: cc
      type: set
      description: >
        Contents of the CC header.
    - name: reply_to
      type: string
      description: >
        Contents of the ReplyTo header.
    - name: msg_id
      type: string
      description: >
        Contents of the MsgID header.
    - name: in_reply_to
      type: string
      description: >
        Contents of the In-Reply-To header.
    - name: subject
      type: string
      description: >
        Contents of the Subject header.
    - name: x_originating_ip
      type: addr
      description: >
        Contents of the X-Originating-IP header.
    - name: first_received
      type: string
      description: >
        Contents of the first Received header.
    - name: second_received
      type: string
      description: >
        Contents of the second Received header.
    - name: last_reply
      type: string
      description: >
        The last message that the server sent to the client.
    - name: path
      type: vector
      description: >
        The message transmission path, as extracted from the headers.
    - name: user_agent
      type: string
      description: >
        Value of the User-Agent header from the client.
    - name: tls
      type: bool
      description: >
        Indicates that the connection has switched to using TLS.
    - name: process_received_from
      type: bool
      description: >
        Indicates if the Received: from headers should still be processed.
    - name: has_client_activity
      type: bool
      description: >
        Indicates if client activity has been seen, but not yet logged.
    - name: entity.filename
      type: string
      description: >
        Filename for the entity if discovered from a header.
    - name: entity.excerpt
      type: string
      description: >
        (present if policy/protocols/smtp/entities-excerpt.bro is loaded)
    - name: fuids
      type: vector
      description: >
        (present if base/protocols/smtp/files.bro is loaded)
    - name: is_webmail
      type: bool
      description: >
        (present if policy/protocols/smtp/software.bro is loaded)- name: snmp
  type: group
  description: >
    Contains fields for the Bro snmp logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp of first packet belonging to the SNMP session.
    - name: uid
      type: string
      description: >
        The unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 5-tuple of addresses/ports (ports inherently include transport protocol information)
    - name: duration
      type: interval
      description: >
        The amount of time between the first packet beloning to the SNMP session and the latest one seen.
    - name: version
      type: string
      description: >
        The version of SNMP being used.
    - name: community
      type: string
      description: >
        The community string of the first SNMP packet associated with the session.  This is used as part of SNMPs (v1 and v2c) administrative/security framework.  See RFC 1157 or RFC 1901.
    - name: get_requests
      type: count
      description: >
        The number of variable bindings in GetRequest/GetNextRequest PDUs seen for the session.
    - name: get_bulk_requests
      type: count
      description: >
        The number of variable bindings in GetBulkRequest PDUs seen for the session.
    - name: get_responses
      type: count
      description: >
        The number of variable bindings in GetResponse/Response PDUs seen for the session.
    - name: set_requests
      type: count
      description: >
        The number of variable bindings in SetRequest PDUs seen for the session.
    - name: display_string
      type: string
      description: >
        A system description of the SNMP responder endpoint.
    - name: up_since
      type: time
      description: >
        The time at which the SNMP responder endpoint claims its been up since.- name: socks
  type: group
  description: >
    Contains fields for the Bro socks logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the proxy connection was first detected.
    - name: uid
      type: string
      description: >
        Unique ID for the tunnel - may correspond to connection uid or be non-existent.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: version
      type: count
      description: >
        Protocol version of SOCKS.
    - name: user
      type: string
      description: >
        Username used to request a login to the proxy.
    - name: password
      type: string
      description: >
        Password used to request a login to the proxy.
    - name: status
      type: string
      description: >
        Server status for the attempt at using the proxy.
    - name: request.host
      type: addr
      description: >
        
    - name: request.name
      type: string
      description: >
        
    - name: request_p
      type: port
      description: >
        Client requested port.
    - name: bound.host
      type: addr
      description: >
        
    - name: bound.name
      type: string
      description: >
        
    - name: bound_p
      type: port
      description: >
        Server bound port.- name: software
  type: group
  description: >
    Contains fields for the Bro software logs.
  fields:
    - name: ts
      type: time
      description: >
        The time at which the software was detected.
    - name: host
      type: addr
      description: >
        The IP address detected running the software.
    - name: host_p
      type: port
      description: >
        The port on which the software is running. Only sensible for server software.
    - name: software_type
      type: Software::Type
      description: >
        
    - name: name
      type: string
      description: >
        Name of the software (e.g. Apache).
    - name: version.major
      type: count
      description: >
        Major version number.
    - name: version.minor
      type: count
      description: >
        Minor version number.
    - name: version.minor2
      type: count
      description: >
        Minor subversion number.
    - name: version.minor3
      type: count
      description: >
        Minor updates number.
    - name: version.addl
      type: string
      description: >
        Additional version string (e.g. beta42).
    - name: unparsed_version
      type: string
      description: >
        The full unparsed version string found because the version parsing doesnt always work reliably in all cases and this acts as a fallback in the logs.
    - name: force_log
      type: bool
      description: >
        This can indicate that this software being detected should definitely be sent onward to the logging framework.  By default, only software that is interesting due to a change in version or it being currently unknown is sent to the logging framework.  This can be set to T to force the record to be sent to the logging framework if some amount of this tracking needs to happen in a specific way to the software.
    - name: url
      type: string
      description: >
        (present if policy/protocols/http/detect-webapps.bro is loaded)- name: ssh
  type: group
  description: >
    Contains fields for the Bro ssh logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the SSH connection began.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: version
      type: count
      description: >
        SSH major version (1 or 2)
    - name: auth_success
      type: bool
      description: >
        Authentication result (T=success, F=failure, unset=unknown)
    - name: auth_attempts
      type: count
      description: >
        The number of authentication attemps we observed. Theres always at least one, since some servers might support no authentication at all. Its important to note that not all of these are failures, since some servers require two-factor auth (e.g. password AND pubkey)
    - name: direction
      type: Direction
      description: >
        Direction of the connection. If the client was a local host logging into an external host, this would be OUTBOUND. INBOUND would be set for the opposite situation.
    - name: client
      type: string
      description: >
        The clients version string
    - name: server
      type: string
      description: >
        The servers version string
    - name: cipher_alg
      type: string
      description: >
        The encryption algorithm in use
    - name: mac_alg
      type: string
      description: >
        The signing (MAC) algorithm in use
    - name: compression_alg
      type: string
      description: >
        The compression algorithm in use
    - name: kex_alg
      type: string
      description: >
        The key exchange algorithm in use
    - name: host_key_alg
      type: string
      description: >
        The server host keys algorithm
    - name: host_key
      type: string
      description: >
        The servers key fingerprint- name: ssl
  type: group
  description: >
    Contains fields for the Bro ssl logs.
  fields:
    - name: ts
      type: time
      description: >
        Time when the SSL connection was first detected.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: version_num
      type: count
      description: >
        Numeric SSL/TLS version that the server chose.
    - name: version
      type: string
      description: >
        SSL/TLS version that the server chose.
    - name: cipher
      type: string
      description: >
        SSL/TLS cipher suite that the server chose.
    - name: curve
      type: string
      description: >
        Elliptic curve the server chose when using ECDH/ECDHE.
    - name: server_name
      type: string
      description: >
        Value of the Server Name Indicator SSL/TLS extension.  It indicates the server name that the client was requesting.
    - name: session_id
      type: string
      description: >
        Session ID offered by the client for session resumption. Not used for logging.
    - name: resumed
      type: bool
      description: >
        Flag to indicate if the session was resumed reusing the key material exchanged in an earlier connection.
    - name: client_ticket_empty_session_seen
      type: bool
      description: >
        Flag to indicate if we saw a non-empty session ticket being sent by the client using an empty session ID. This value is used to determine if a session is being resumed. Its not logged.
    - name: client_key_exchange_seen
      type: bool
      description: >
        Flag to indicate if we saw a client key exchange message sent by the client. This value is used to determine if a session is being resumed. Its not logged.
    - name: server_appdata
      type: count
      description: >
        Count to track if the server already sent an application data packet for TLS 1.3. Used to track when a session was established.
    - name: client_appdata
      type: bool
      description: >
        Flag to track if the client already sent an application data packet for TLS 1.3. Used to track when a session was established.
    - name: last_alert
      type: string
      description: >
        Last alert that was seen during the connection.
    - name: next_protocol
      type: string
      description: >
        Next protocol the server chose using the application layer next protocol extension, if present.
    - name: analyzer_id
      type: count
      description: >
        The analyzer ID used for the analyzer instance attached to each connection.  It is not used for logging since its a meaningless arbitrary number.
    - name: established
      type: bool
      description: >
        Flag to indicate if this ssl session has been established successfully, or if it was aborted during the handshake.
    - name: logged
      type: bool
      description: >
        Flag to indicate if this record already has been logged, to prevent duplicates.- name: stats
  type: group
  description: >
    Contains fields for the Bro stats logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp for the measurement.
    - name: peer
      type: string
      description: >
        Peer that generated this log.  Mostly for clusters.
    - name: mem
      type: count
      description: >
        Amount of memory currently in use in MB.
    - name: pkts_proc
      type: count
      description: >
        Number of packets processed since the last stats interval.
    - name: bytes_recv
      type: count
      description: >
        Number of bytes received since the last stats interval if reading live traffic.
    - name: pkts_dropped
      type: count
      description: >
        Number of packets dropped since the last stats interval if reading live traffic.
    - name: pkts_link
      type: count
      description: >
        Number of packets seen on the link since the last stats interval if reading live traffic.
    - name: pkt_lag
      type: interval
      description: >
        Lag between the wall clock and packet timestamps if reading live traffic.
    - name: events_proc
      type: count
      description: >
        Number of events processed since the last stats interval.
    - name: events_queued
      type: count
      description: >
        Number of events that have been queued since the last stats interval.
    - name: active_tcp_conns
      type: count
      description: >
        TCP connections currently in memory.
    - name: active_udp_conns
      type: count
      description: >
        UDP connections currently in memory.
    - name: active_icmp_conns
      type: count
      description: >
        ICMP connections currently in memory.
    - name: tcp_conns
      type: count
      description: >
        TCP connections seen since last stats interval.
    - name: udp_conns
      type: count
      description: >
        UDP connections seen since last stats interval.
    - name: icmp_conns
      type: count
      description: >
        ICMP connections seen since last stats interval.
    - name: timers
      type: count
      description: >
        Number of timers scheduled since last stats interval.
    - name: active_timers
      type: count
      description: >
        Current number of scheduled timers.
    - name: files
      type: count
      description: >
        Number of files seen since last stats interval.
    - name: active_files
      type: count
      description: >
        Current number of files actively being seen.
    - name: dns_requests
      type: count
      description: >
        Number of DNS requests seen since last stats interval.
    - name: active_dns_requests
      type: count
      description: >
        Current number of DNS requests awaiting a reply.
    - name: reassem_tcp_size
      type: count
      description: >
        Current size of TCP data in reassembly.
    - name: reassem_file_size
      type: count
      description: >
        Current size of File data in reassembly.
    - name: reassem_frag_size
      type: count
      description: >
        Current size of packet fragment data in reassembly.
    - name: reassem_unknown_size
      type: count
      description: >
        Current size of unknown data in reassembly (this is only PIA buffer right now).- name: syslog
  type: group
  description: >
    Contains fields for the Bro syslog logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp when the syslog message was seen.
    - name: uid
      type: string
      description: >
        Unique ID for the connection.
    - name: id
      type: conn_id
      description: >
        The connections 4-tuple of endpoint addresses/ports.
    - name: proto
      type: transport_proto
      description: >
        Protocol over which the message was seen.
    - name: facility
      type: string
      description: >
        Syslog facility for the message.
    - name: severity
      type: string
      description: >
        Syslog severity for the message.
    - name: message
      type: string
      description: >
        The plain text message.- name: traceroute
  type: group
  description: >
    Contains fields for the Bro traceroute logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp
    - name: src
      type: addr
      description: >
        Address initiating the traceroute.
    - name: dst
      type: addr
      description: >
        Destination address of the traceroute.
    - name: proto
      type: string
      description: >
        Protocol used for the traceroute.- name: tunnel
  type: group
  description: >
    Contains fields for the Bro tunnel logs.
  fields:
    - name: ts
      type: time
      description: >
        Time at which some tunnel activity occurred.
    - name: uid
      type: string
      description: >
        The unique identifier for the tunnel, which may correspond to a connections uid field for non-IP-in-IP tunnels. This is optional because there could be numerous connections for payload proxies like SOCKS but we should treat it as a single tunnel.
    - name: id
      type: conn_id
      description: >
        The tunnel connection 4-tuple of endpoint addresses/ports. For an IP tunnel, the ports will be 0.
    - name: tunnel_type
      type: Tunnel::Type
      description: >
        
    - name: action
      type: Tunnel::Action
      description: >
        - name: unified2
  type: group
  description: >
    Contains fields for the Bro unified2 logs.
  fields:
    - name: ts
      type: time
      description: >
        Timestamp attached to the alert.
    - name: id.src_ip
      type: addr
      description: >
        
    - name: id.src_p
      type: port
      description: >
        
    - name: id.dst_ip
      type: addr
      description: >
        
    - name: id.dst_p
      type: port
      description: >
        
    - name: sensor_id
      type: count
      description: >
        Sensor that originated this event.
    - name: signature_id
      type: count
      description: >
        Sig id for this generator.
    - name: signature
      type: string
      description: >
        A string representation of the signature_id field if a sid_msg.map file was loaded.
    - name: generator_id
      type: count
      description: >
        Which generator generated the alert?
    - name: generator
      type: string
      description: >
        A string representation of the generator_id field if a gen_msg.map file was loaded.
    - name: signature_revision
      type: count
      description: >
        Sig revision for this id.
    - name: classification_id
      type: count
      description: >
        Event classification.
    - name: classification
      type: string
      description: >
        Descriptive classification string.
    - name: priority_id
      type: count
      description: >
        Event priority.
    - name: event_id
      type: count
      description: >
        Event ID.
    - name: packet
      type: string
      description: >
        Some of the packet data.- name: weird
  type: group
  description: >
    Contains fields for the Bro weird logs.
  fields:
    - name: ts
      type: time
      description: >
        The time when the weird occurred.
    - name: uid
      type: string
      description: >
        If a connection is associated with this weird, this will be the connections unique ID.
    - name: id
      type: conn_id
      description: >
        conn_id for the optional connection.
    - name: conn
      type: connection
      description: >
        A shorthand way of giving the uid and id to a weird.
    - name: name
      type: string
      description: >
        The name of the weird that occurred.
    - name: addl
      type: string
      description: >
        Additional information accompanying the weird if any.
    - name: notice
      type: bool
      description: >
        Indicate if this weird was also turned into a notice.
    - name: peer
      type: string
      description: >
        The peer that originated this weird.  This is helpful in cluster deployments if a particular cluster node is having trouble to help identify which node is having trouble.
    - name: identifier
      type: string
      description: >
        This field is to be provided when a weird is generated for the purpose of deduplicating weirds. The identifier string should be unique for a single instance of the weird. This field is used to define when a weird is conceptually a duplicate of a previous weird.- name: x509
  type: group
  description: >
    Contains fields for the Bro x509 logs.
  fields:
    - name: ts
      type: time
      description: >
        Current timestamp.
    - name: id
      type: string
      description: >
        File id of this certificate.
    - name: certificate.version
      type: count
      description: >
        Version number.
    - name: certificate.serial
      type: string
      description: >
        Serial number.
    - name: certificate.subject
      type: string
      description: >
        Subject.
    - name: certificate.issuer
      type: string
      description: >
        Issuer.
    - name: certificate.cn
      type: string
      description: >
        Last (most specific) common name.
    - name: certificate.not_valid_before
      type: time
      description: >
        Timestamp before when certificate is not valid.
    - name: certificate.not_valid_after
      type: time
      description: >
        Timestamp after when certificate is not valid.
    - name: certificate.key_alg
      type: string
      description: >
        Name of the key algorithm
    - name: certificate.sig_alg
      type: string
      description: >
        Name of the signature algorithm
    - name: certificate.key_type
      type: string
      description: >
        Key type, if key parseable by openssl (either rsa, dsa or ec)
    - name: certificate.key_length
      type: count
      description: >
        Key length in bits
    - name: certificate.exponent
      type: string
      description: >
        Exponent, if RSA-certificate
    - name: certificate.curve
      type: string
      description: >
        Curve, if EC-certificate
    - name: handle
      type: opaque
      description: >
        The opaque wrapping the certificate. Mainly used for the verify operations.
    - name: extensions
      type: vector
      description: >
        All extensions that were encountered in the certificate.
    - name: san.dns
      type: string_vec
      description: >
        List of DNS entries in SAN
    - name: san.uri
      type: string_vec
      description: >
        List of URI entries in SAN
    - name: san.email
      type: string_vec
      description: >
        List of email entries in SAN
    - name: san.ip
      type: addr_vec
      description: >
        List of IP entries in SAN
    - name: san.other_fields
      type: bool
      description: >
        True if the certificate contained other, not recognized or parsed name fields
    - name: basic_constraints.ca
      type: bool
      description: >
        CA flag set?
    - name: basic_constraints.path_len
      type: count
      description: >
        Maximum path length
    - name: logcert
      type: bool
      description: >
        (present if policy/protocols/ssl/log-hostcerts-only.bro is loaded)